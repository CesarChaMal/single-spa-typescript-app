!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.singleSpaTypescriptApp=t():e.singleSpaTypescriptApp=t()}(window,(function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.l=!0,s.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(r,s,function(t){return e[t]}.bind(null,s));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t),n.d(t,"bootstrap",(function(){return s})),n.d(t,"mount",(function(){return o})),n.d(t,"unmount",(function(){return i}));const r=new class{constructor(){this.container=null,this.userStateSub=null,this.employeesSub=null,this.eventsSub=null,this.sharedUserState=null,this.employees=[],this.events=[],this.state={users:[],selectedUser:null,loading:!1,error:null}}mount(e){return new Promise(e=>{if(this.container=document.getElementById("typescript-app"),!this.container)return console.error("Mount point #typescript-app not found"),e();window.stateManager&&(this.userStateSub=window.stateManager.userState$.subscribe(e=>{this.sharedUserState=e,this.updateSharedStateDisplay(),console.log("📘 TypeScript: User state changed:",e)}),this.employeesSub=window.stateManager.employees$.subscribe(e=>{this.employees=e,this.updateSharedStateDisplay()}),this.eventsSub=window.stateManager.events$.subscribe(e=>{this.events=[...this.events.slice(-4),e],this.updateSharedStateDisplay(),console.log("📘 TypeScript received event:",e)})),this.render(),this.attachEventListeners(),console.log("📘 TypeScript App mounted"),e()})}unmount(){return new Promise(e=>{this.userStateSub&&this.userStateSub.unsubscribe(),this.employeesSub&&this.employeesSub.unsubscribe(),this.eventsSub&&this.eventsSub.unsubscribe(),this.container&&(this.container.innerHTML=""),console.log("📘 TypeScript App unmounted"),e()})}render(){if(!this.container)return;const e=(new Date).toLocaleString();this.container.innerHTML=`\n      <div style="padding: 20px; border: 2px solid #007bff; border-radius: 8px; margin: 10px 0; background: #f8f9fa;">\n        <h2 style="color: #007bff; margin: 0 0 15px 0;">\n          <img src="https://upload.wikimedia.org/wikipedia/commons/4/4c/Typescript_logo_2020.svg" width="40" height="40" style="vertical-align: middle; margin-right: 10px;">\n          TypeScript Microfrontend\n        </h2>\n        <p><strong>Language:</strong> TypeScript with strict type checking</p>\n        <p><strong>Features:</strong> Interfaces, Generics, Type Safety, IntelliSense</p>\n        <p><strong>Mounted at:</strong> ${e}</p>\n        \n        <div style="margin: 15px 0;">\n          <button id="ts-load-users" style="\n            background: #007bff; \n            color: white; \n            border: none; \n            padding: 8px 16px; \n            border-radius: 4px; \n            cursor: pointer;\n            margin-right: 10px;\n          ">\n            Load Users\n          </button>\n          \n          <button id="ts-add-user" style="\n            background: #28a745; \n            color: white; \n            border: none; \n            padding: 8px 16px; \n            border-radius: 4px; \n            cursor: pointer;\n          ">\n            Add Random User\n          </button>\n        </div>\n        \n        <div id="ts-users-list" style="\n          margin-top: 15px; \n          padding: 10px; \n          background: #e9ecef; \n          border-radius: 4px;\n          min-height: 100px;\n        ">\n          <em>Click "Load Users" to fetch typed data...</em>\n        </div>\n        \n        \x3c!-- Shared State Showcase --\x3e\n        <div id="shared-state-showcase" style="\n          margin: 15px 0; \n          padding: 15px; \n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); \n          border-radius: 8px; \n          color: white;\n        ">\n          <h4 style="margin: 0 0 15px 0; color: white;">🔄 Shared State Management (TypeScript)</h4>\n          \n          <div id="user-state-info" style="\n            background: rgba(255,255,255,0.1); \n            padding: 10px; \n            border-radius: 6px; \n            margin-bottom: 10px;\n          ">\n            <strong>👤 User State:</strong><br>\n            <span id="user-status">❌ Not logged in</span>\n          </div>\n          \n          <div id="employee-state-info" style="\n            background: rgba(255,255,255,0.1); \n            padding: 10px; \n            border-radius: 6px; \n            margin-bottom: 10px;\n          ">\n            <strong>👥 Employee Data:</strong><br>\n            📊 Count: <strong><span id="employee-count">0</span></strong><br>\n            👀 Preview: <span id="employee-preview">No employees loaded</span>\n          </div>\n          \n          <div style="display: flex; gap: 10px; flex-wrap: wrap; margin-bottom: 10px;">\n            <button id="load-employees-btn" style="\n              background: #28a745; \n              color: white; \n              border: none; \n              padding: 8px 12px; \n              border-radius: 4px; \n              cursor: pointer; \n              font-size: 12px;\n            ">\n              👥 Load Employees\n            </button>\n            <button id="broadcast-btn" style="\n              background: #007bff; \n              color: white; \n              border: none; \n              padding: 8px 12px; \n              border-radius: 4px; \n              cursor: pointer; \n              font-size: 12px;\n            ">\n              📡 Broadcast from TypeScript\n            </button>\n            <button id="clear-employees-btn" style="\n              background: #dc3545; \n              color: white; \n              border: none; \n              padding: 8px 12px; \n              border-radius: 4px; \n              cursor: pointer; \n              font-size: 12px;\n            ">\n              🗑️ Clear Data\n            </button>\n          </div>\n          \n          <div id="events-info" style="\n            background: rgba(255,255,255,0.1); \n            padding: 10px; \n            border-radius: 6px; \n            font-size: 12px;\n            display: none;\n          ">\n            <strong>📨 Recent Events:</strong><br>\n            <div id="events-list"></div>\n          </div>\n        </div>\n        \n        <div style="margin-top: 15px; font-size: 0.9em; color: #6c757d;">\n          <strong>TypeScript Features:</strong>\n          <ul style="margin: 5px 0; padding-left: 20px;">\n            <li>Strong Type Checking</li>\n            <li>Interface Definitions</li>\n            <li>Generic Types</li>\n            <li>Compile-time Error Detection</li>\n            <li>Enhanced IDE Support</li>\n          </ul>\n        </div>\n      </div>\n    `}attachEventListeners(){var e,t,n,r,s;const o=null===(e=this.container)||void 0===e?void 0:e.querySelector("#ts-load-users"),i=null===(t=this.container)||void 0===t?void 0:t.querySelector("#ts-add-user"),a=null===(n=this.container)||void 0===n?void 0:n.querySelector("#load-employees-btn"),d=null===(r=this.container)||void 0===r?void 0:r.querySelector("#broadcast-btn"),l=null===(s=this.container)||void 0===s?void 0:s.querySelector("#clear-employees-btn");null==o||o.addEventListener("click",()=>this.loadUsers()),null==i||i.addEventListener("click",()=>this.addRandomUser()),null==a||a.addEventListener("click",()=>this.loadEmployees()),null==d||d.addEventListener("click",()=>this.broadcastMessage()),null==l||l.addEventListener("click",()=>this.clearEmployees())}async loadUsers(){this.setState({loading:!0,error:null}),this.updateUsersDisplay();try{const e=await this.fetchUsersFromAPI();if("success"!==e.status)throw new Error(e.message);this.setState({users:e.data,loading:!1})}catch(e){this.setState({loading:!1,error:e instanceof Error?e.message:"Unknown error"})}this.updateUsersDisplay()}async fetchUsersFromAPI(){await new Promise(e=>setTimeout(e,1e3));return{data:[{id:1,name:"John Doe",email:"john@example.com",role:"admin",createdAt:new Date("2023-01-15")},{id:2,name:"Jane Smith",email:"jane@example.com",role:"user",createdAt:new Date("2023-02-20")},{id:3,name:"Bob Johnson",email:"bob@example.com",role:"guest",createdAt:new Date("2023-03-10")}],status:"success",message:"Users loaded successfully",timestamp:(new Date).toISOString()}}addRandomUser(){const e=["Alice Cooper","Charlie Brown","Diana Prince","Edward Norton"],t=["admin","user","guest"],n=e[Math.floor(Math.random()*e.length)],r=t[Math.floor(Math.random()*t.length)],s={id:this.state.users.length+1,name:n,email:n.toLowerCase().replace(" ",".")+"@example.com",role:r,createdAt:new Date};this.setState({users:[...this.state.users,s]}),this.updateUsersDisplay()}setState(e){this.state={...this.state,...e}}updateUsersDisplay(){var e;const t=null===(e=this.container)||void 0===e?void 0:e.querySelector("#ts-users-list");if(!t)return;if(this.state.loading)return void(t.innerHTML="<em>Loading users...</em>");if(this.state.error)return void(t.innerHTML=`<span style="color: #dc3545;">Error: ${this.state.error}</span>`);if(0===this.state.users.length)return void(t.innerHTML='<em>No users loaded. Click "Load Users" to fetch data.</em>');const n=this.state.users.map(e=>`\n      <div style="\n        background: white; \n        padding: 10px; \n        margin: 5px 0; \n        border-radius: 4px; \n        border-left: 4px solid ${this.getRoleColor(e.role)};\n      ">\n        <strong>${e.name}</strong> (${e.role})\n        <br>\n        <small>${e.email} • Created: ${e.createdAt.toLocaleDateString()}</small>\n      </div>\n    `).join("");t.innerHTML=`\n      <strong>Users (${this.state.users.length}):</strong>\n      ${n}\n    `}getRoleColor(e){return{admin:"#dc3545",user:"#007bff",guest:"#6c757d"}[e]}loadEmployees(){window.stateManager&&window.stateManager.loadEmployees()}broadcastMessage(){if(window.stateManager){const e={source:"TypeScript",message:"Hello from TypeScript!",timestamp:(new Date).toISOString()};window.stateManager.emit("cross-app-message",e)}}clearEmployees(){window.stateManager&&window.stateManager.employees$.next([])}updateSharedStateDisplay(){var e;if(!this.container)return;const t=this.container.querySelector("#user-status");t&&(t.innerHTML=this.sharedUserState?`✅ Logged in as: <strong>${(null===(e=this.sharedUserState.user)||void 0===e?void 0:e.username)||"Unknown"}</strong>`:"❌ Not logged in");const n=this.container.querySelector("#employee-count"),r=this.container.querySelector("#employee-preview");if(n&&(n.textContent=this.employees.length.toString()),r)if(this.employees.length>0){const e=this.employees.slice(0,3).map(e=>e.name).join(", "),t=this.employees.length>3?` (+${this.employees.length-3} more)`:"";r.textContent=e+t}else r.textContent="No employees loaded";const s=this.container.querySelector("#events-info"),o=this.container.querySelector("#events-list");s&&o&&(this.events.length>0?(s.style.display="block",o.innerHTML=this.events.slice(-3).map(e=>{var t,n;return`<div style="margin-top: 5px;">${(null===(t=e.data)||void 0===t?void 0:t.source)||e.event}: ${(null===(n=e.data)||void 0===n?void 0:n.message)||e.event}</div>`}).join("")):s.style.display="none")}},s=()=>Promise.resolve(),o=e=>r.mount(e),i=()=>r.unmount();t.default={bootstrap:s,mount:o,unmount:i}}])}));